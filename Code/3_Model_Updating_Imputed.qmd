---
title: "2 Codigo Reproducible: Análisis de Datos - Recalibración de modelo KFRE para predecir falla renal en asegurados de EsSalud"
author: "Percy Soto Becerra"
format: 
  html: 
   toc: true
   number-sections: true
   df-print: paged
   page-layout: full
   embed-resources: true
execute: 
  warning: false
---

## Introduction 

This document presents the code and results of the main analysis shown in the article.

https://github.com/BRCLeicesterData/KFRE

## Setup

```{r}
#| label: load-packages
#| include: true

rm(list = ls())

# Load libraries and data ---

# Libraries ----
library(lubridate)
library(dplyr)
library(ggplot2)
library(qwraps2)
options(qwraps2_markup = "markdown")
library(survival)
library(survminer)
library(riskRegression)
library(grid)
library(gridExtra)
library(geepack)
library(kableExtra)
library(boot)
library(Hmisc)
library(pseudo)
library(pec)
library(margins)
library(rms)
library(lmtest)
library(pmsampsize)

pacman::p_load(
  here, 
  skimr, 
  survival,
  rms,
  cmprsk,
  riskRegression,
  mstate,
  pseudo,
  pec,
  riskRegression,
  plotrix,
  knitr,
  splines,
  kableExtra,
  flextable,
  gtsummary,
  boot,
  tidyverse,
  rsample,
  gridExtra,
  webshot, 
  patchwork,
  survival, 
  cmprsk, 
  survminer, 
  ggsci, 
  cowplot, 
  scales, 
  patchwork, 
  labelled, 
  glue, 
  dcurves, 
  broom, 
  downlit, 
  xml2, 
  gghalves, 
  devtools, 
  htmltools, 
  gghalves, 
  ggtext, 
  DiagrammeR, 
  gt, 
  janitor, 
  VIM, 
  PerformanceAnalytics, 
  mice, 
  rms, 
  naniar, 
  DescTools
)



if (!require("smplot2")) devtools::install_github('smin95/smplot2', force = TRUE)
```

#### Funciones

```{r}
# Funcion que calcula indice pronostico
kfre_pi <- function(data) {
  -0.2201 * (data$age / 10 - 7.036) + 0.2467 * (as.integer(data$sex == "Masculino") - 0.5642) - 0.5567 * (data$eGFR_ckdepi / 5 - 7.222) + 0.4510 * (log(data$acr) - 5.137)
}

# Funcion que calcula probabilidad predicha a 2 o 5 years
kfre_pr <- function(data, horizon) {
  if (horizon == 2) {
    1 - 0.9832 ^ exp(kfre_pi(data))
  } else if (horizon == 5) {
    1 - 0.9365 ^ exp(kfre_pi(data))
  }
}
```


## Datos

```{r}
# Import data
dataA.imp <- readRDS(here::here("Data", "Tidy", "data_impA.rds")) 
dataB.imp <- readRDS(here::here("Data", "Tidy", "data_impB.rds")) 

dataA <- complete(dataA.imp, action = "long", include = TRUE)

dataA <- dataA |> 
  mutate(beta.sum = kfre_pi(dataA))

dataA.imp <- as.mids(dataA)
```


## Reestimar riesgo basal usando Cox:

Bajo este enfoque de recalibración, solo reestimaremos el riesgo basal: 

```{r}
recal.risk.basal <- function(data, horizon) {
  
  fc.aj.risk.basal <- rep(NA, max(data$.imp))
  
  for (i in 1:max(data$.imp)) {
    
    datos_filter <- data |> 
      filter(.imp == i) 
    
    fit <- coxph(Surv(time5y, eventb5y) ~ offset(beta.sum), data = datos_filter, 
                 x = TRUE, y = TRUE)
    
    p1 <- predictSurvProb(fit, 
                          newdata = data.frame(beta.sum = 0), 
                          times = horizon, 
                          type = "survival", 
                          confint = TRUE, 
                          se = TRUE)
    
    fc.aj.risk.basal[i] <- p1
  }
  
  return(list(fc.aj.risk.basal.imp = fc.aj.risk.basal, 
              fc.aj.risk.basal = mean(fc.aj.risk.basal)))
}
```

```{r}
p5y <- recal.risk.basal(dataA, 5)
p5y
```

```{r}
p2y <- recal.risk.basal(dataA, 2)
p2y
```


El nuevo factor para recalcular el riesgo  basal (recalibrado) a 5 anios es el siguiente `r p5y$fc.aj.risk.basal`. A 2 anios es el siguiente  `r p2y$fc.aj.risk.basal`.

Con esto, vamos a reestimar las probabilidades predichas por el modelo recalibrado solo con la actualización del riesgo basal:

```{r}
# Funcion que calcula probabilidad predicha a 2 o 5 years
kfre_pr.risk.basal <- function(data, horizon) {
  if (horizon == 2) {
    1 - recal.risk.basal(data, 2)$fc.aj.risk.basal ^ exp(kfre_pi(data))
  } else if (horizon == 5) {
    1 - recal.risk.basal(data, 5)$fc.aj.risk.basal ^ exp(kfre_pi(data))
  }
}
```


## Reestimar coeficientes mediante Cox: 

Primero ajustamos nuevamente una regresión del cox sobre el índice pronósitco y recalculamos el coeficiente para este

```{r}
recal.risk.coef <- function(data, horizon) {
  
  fc.aj.risk.basal <- rep(NA, max(data$.imp))
  fc.aj.coef <- rep(NA, max(data$.imp))
  
  for (i in 1:max(data$.imp)) {
    
    datos_filter <- data |> 
      filter(.imp == i) 
    
    # Calculo del factor de ajuste a los coeficientes
    fit <- coxph(Surv(time5y, eventb5y) ~ beta.sum, data = datos_filter, 
                 x = TRUE, y = TRUE)
    
    datos_filter <- datos_filter |> 
      mutate(beta.sum2 = fit$coefficients * beta.sum)
    
    # Recalculo de la supervivencia basal
    fit2 <- coxph(Surv(time5y, eventb5y) ~ offset(beta.sum2), 
                         data = datos_filter, 
                         x = T, 
                         y = T)
    
    p2 <- predictSurvProb(fit2, 
                          newdata = data.frame(beta.sum2 = 0), 
                          times = horizon, 
                          type = "survival", 
                          confint = TRUE, 
                          se = TRUE)
    
    fc.aj.risk.basal[i] <- p2
    fc.aj.coef[i] <- fit$coefficients
  }
  
  return(list(fc.aj.risk.basal.imp = fc.aj.risk.basal, 
              fc.aj.risk.basal = mean(fc.aj.risk.basal), 
              fc.aj.coef.imp = fc.aj.coef, 
              fc.aj.coef = mean(fc.aj.coef)))
}
```


```{r}
p5y_2 <- recal.risk.coef(dataA, 5)
p5y_2
```
Bajo este enfoque, el factor de ajuste de coeficientes a 5 anios es `r p5y_2$fc.aj.coef` y la supervivencia basal ajustada es `r p5y_2$fc.aj.risk.basal`.

```{r}
p2y_2 <- recal.risk.coef(dataA, 2)
p2y_2
```
Bajo este enfoque, el factor de ajuste de coeficientes a 2 anios es `r p2y_2$fc.aj.coef` y la supervivencia basal ajustada es `r p2y_2$fc.aj.risk.basal`.


```{r}
# Funcion que calcula probabilidad predicha a 2 o 5 years
kfre_pr.risk.coef <- function(data, horizon) {
  if (horizon == 2) {
    1 - recal.risk.coef(data, 2)$fc.aj.risk.basal ^ exp(kfre_pi.coef(data))
  } else if (horizon == 5) {
    1 - recal.risk.coef(data, 5)$fc.aj.risk.basal ^ exp(kfre_pi.coef(data))
  }
}

# Funcion que calcula indice pronostico
kfre_pi.coef <- function(data) {
  recal.risk.coef(data, 5)$fc.aj.coef * (-0.2201 * (data$age / 10 - 7.036) + 0.2467 * (as.integer(data$sex == "Masculino") - 0.5642) - 0.5567 * (data$eGFR_ckdepi / 5 - 7.222) + 0.4510 * (log(data$acr) - 5.137))
}
```

## Reestimar riesgo basal usando Cause-specific Hazard Models:

Bajo este enfoque de recalibración, solo reestimaremos el riesgo basal: 

```{r}
recal.risk.basal.csh <- function(data, horizon) {
  
  fc.aj.risk.basal <- rep(NA, max(data$.imp))
  
  for (i in 1:max(data$.imp)) {
    
    datos_filter <- data |> 
      filter(.imp == i) 
    
    fit <- CSC(Hist(time5y, eventd5y) ~ offset(beta.sum), 
               data = datos_filter,
               cause = 1)
    
    p1 <- 1 - as.vector(predictRisk(fit, 
                      newdata = data.frame(beta.sum = 0), 
                      times = horizon, 
                      cause = 1))
    
    fc.aj.risk.basal[i] <- p1
  }
  
  return(list(fc.aj.risk.basal.imp.csh = fc.aj.risk.basal, 
              fc.aj.risk.basal.csh = mean(fc.aj.risk.basal)))
}
```

```{r}
p5y_csh <- recal.risk.basal.csh(dataA, 5)
p5y_csh
```

```{r}
p2y_csh <- recal.risk.basal.csh(dataA, 2)
p2y_csh
```


El nuevo factor para recalcular el riesgo  basal (recalibrado) a 5 anios es el siguiente `r p5y_csh$fc.aj.risk.basal.csh`. A 2 anios es el siguiente  `r p2y_csh$fc.aj.risk.basal.csh`.

Con esto, vamos a reestimar las probabilidades predichas por el modelo recalibrado solo con la actualización del riesgo basal:

```{r}
# Funcion que calcula probabilidad predicha a 2 o 5 years
kfre_pr.risk.basal.csh <- function(data, horizon) {
  if (horizon == 2) {
    1 - recal.risk.basal.csh(data, 2)$fc.aj.risk.basal.csh ^ exp(kfre_pi(data))
  } else if (horizon == 5) {
    1 - recal.risk.basal.csh(data, 5)$fc.aj.risk.basal.csh ^ exp(kfre_pi(data))
  }
}
```


## Reestimar coeficientes mediante Cause-specific Hazard Models: 

Primero ajustamos nuevamente un Cause-specific Hazard Models sobre el índice pronósitco y recalculamos el coeficiente para este

```{r}
recal.risk.coef.csh <- function(data, horizon) {
  
  fc.aj.risk.basal <- rep(NA, max(data$.imp))
  fc.aj.coef <- rep(NA, max(data$.imp))
  
  for (i in 1:max(data$.imp)) {
    
    datos_filter <- data |> 
      filter(.imp == i) 
    
  # Calculo del factor de ajuste a los coeficientes
    fit <- CSC(Hist(time5y, eventd5y) ~ beta.sum, 
               data = datos_filter,
               cause = 1)
    
    datos_filter <- datos_filter |> 
      mutate(beta.sum2 = fit[["models"]][["Cause 1"]][["coefficients"]][["beta.sum"]] * beta.sum)
    
    # Recalculo de la supervivencia basal
    fit2 <- CSC(Hist(time5y, eventd5y) ~ offset(beta.sum2), 
               data = datos_filter,
               cause = 1)
    
    p2 <- 1 - as.vector(predictRisk(fit2, 
                      newdata = data.frame(beta.sum2 = 0), 
                      times = horizon, 
                      cause = 1))   
  
    
    fc.aj.risk.basal[i] <- p2
    fc.aj.coef[i] <- fit[["models"]][["Cause 1"]][["coefficients"]][["beta.sum"]]
  }
  
  return(list(fc.aj.risk.basal.imp.csh = fc.aj.risk.basal, 
              fc.aj.risk.basal.csh = mean(fc.aj.risk.basal), 
              fc.aj.coef.imp.csh = fc.aj.coef, 
              fc.aj.coef.csh = mean(fc.aj.coef)))
}
```


```{r}
p5y_2.csh <- recal.risk.coef.csh(dataA, 5)
p5y_2.csh
```

Bajo este enfoque, el factor de ajuste de coeficientes a 5 anios es `r p5y_2.csh$fc.aj.coef.csh` y la supervivencia basal ajustada es `r p5y_2.csh$fc.aj.risk.basal.csh`.

```{r}
p2y_2.csh <- recal.risk.coef.csh(dataA, 2)
p2y_2.csh
```

Bajo este enfoque, el factor de ajuste de coeficientes a 2 anios es `r p2y_2.csh$fc.aj.coef.csh` y la supervivencia basal ajustada es `r p2y_2.csh$fc.aj.risk.basal.csh`.


```{r}
# Funcion que calcula probabilidad predicha a 2 o 5 years
kfre_pr.risk.coef.csh <- function(data, horizon) {
  if (horizon == 2) {
    1 - recal.risk.coef.csh(data, 2)$fc.aj.risk.basal.csh ^ exp(kfre_pi.coef.csh(data))
  } else if (horizon == 5) {
    1 - recal.risk.coef.csh(data, 5)$fc.aj.risk.basal.csh ^ exp(kfre_pi.coef.csh(data))
  }
}

# Funcion que calcula indice pronostico
kfre_pi.coef.csh <- function(data) {
  recal.risk.coef.csh(data, 5)$fc.aj.coef.csh * (-0.2201 * (data$age / 10 - 7.036) + 0.2467 * (as.integer(data$sex == "Masculino") - 0.5642) - 0.5567 * (data$eGFR_ckdepi / 5 - 7.222) + 0.4510 * (log(data$acr) - 5.137))
}
```


## Ticket de Reproducibilidad

```{r}
sessionInfo()
```

